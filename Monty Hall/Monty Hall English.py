from random import choice, shuffledef playSwitching():    contents = ['Goat','Goat','Car']    shuffle(contents)    doorsPlayerCanSelect = [0,1,2]     doorsHostCanReveal = []    # In the possible doors that the host could reveal, we include only those that    # contain a goat    for i in range(3):        if contents[i] == 'Goat':            doorsHostCanReveal.append(i)     # The player selects his first door    initialSelection = choice(doorsPlayerCanSelect)      doorsPlayerCanSelect.remove(initialSelection)    if initialSelection in doorsHostCanReveal:        doorsHostCanReveal.remove(initialSelection)    # The host reveals a door, so the player cannot select it anymore    doorsPlayerCanSelect.remove(choice(doorsHostCanReveal))     # The final door the player selects is the other one remaining, because he switches    finalSelection = doorsPlayerCanSelect.pop()    return contents[finalSelection] # We return the content finally selectednumberAttempts = 50numberWinningsSwitching = 0for j in range(numberAttempts):    playerFinalSelection = playSwitching()    if playerFinalSelection == 'Car':        numberWinningsSwitching += 1print("The sample proportion of winnings by switching is: "+str(numberWinningsSwitching/numberAttempts))